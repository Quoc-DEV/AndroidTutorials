apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.dev.quoc.androidtutorials"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
        }
    }

    // Specifies the flavor dimensions you want to use. The order in which you
    // list each dimension determines its priority, from highest to lowest,
    // when Gradle merges variant sources and configurations. You must assign
    // each product flavor you configure to one of the flavor dimensions.
    flavorDimensions "name-tutorial"
    productFlavors {
        'chores-app' {
            dimension "name-tutorial"
            applicationIdSuffix "chores"
        }

        'tintin-app' {
            dimension "name-tutorial"
            applicationIdSuffix "tintin"
        }

        'antssmasher-app' {
            dimension "name-tutorial"
            applicationIdSuffix "antssmasher"
        }

        'tictactoe-app' {
            dimension "name-tutorial"
            applicationIdSuffix "tictactoe"
        }

    }

    sourceSets {
        'chores-app' {
            res.srcDirs = ['src/chores-app/res']
        }

        'tintin-app' {
            res.srcDirs = ['src/tintin-app/res']
        }

        'antssmasher-app' {
            res.srcDirs = ['src/antssmasher-app/res']
        }

        'tictactoe-app' {
            res.srcDirs = ['src/tictactoe-app/res']
        }
    }

    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
        xmlOutput file("${buildDir}/outputs/lint-results.xml")
    }

    /**
     * if you mix Java and Kotlin files is a good practice created the kotlin directory
     * but I prefer created the kotlin package although I will not mix them
     **/
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'

    // Fire base
    implementation 'com.google.firebase:firebase-database:11.6.2'
    implementation 'com.google.firebase:firebase-auth:11.6.2'
    implementation 'com.google.firebase:firebase-storage:11.6.2'
    implementation 'com.firebaseui:firebase-ui-database:2.1.1'

    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.google.code.gson:gson:2.8.2'

    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.4.+'
    implementation 'id.zelory:compressor:2.1.0'
}

apply plugin: 'com.google.gms.google-services'
